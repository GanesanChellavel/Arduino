To turn on an LED connected to a specific pin on the ESP8266 during a specific time range
 (e.g., 19:00:00 to 23:00:00), you can add conditional logic in the 
loop function to check the current time and control the LED accordingly
The current time is checked, and if it is between 19:00:00 and 23:00:00 (inclusive of 19:00:00 
and exclusive of 23:00:00), the LED is turned on with digitalWrite(ledPin, HIGH);.
Otherwise, the LED is turned off with digitalWrite(ledPin, LOW);
#include <time.h>
#include <sys/time.h>

const int ledPin = 2; // GPIO pin where the LED is connected

void setRtcTime(int hr, int min, int sec, int day, int month, int year) {
  struct tm t;
  t.tm_hour = hr;
  t.tm_min = min;
  t.tm_sec = sec;
  t.tm_mday = day;
  t.tm_mon = month - 1; // Month is 0-11 in struct tm
  t.tm_year = year - 1900; // Year since 1900 in struct tm
  time_t t_of_day = mktime(&t);
  timeval tv = { t_of_day, 0 };
  settimeofday(&tv, nullptr);
}

void printLocalTime() {
  time_t now;
  struct tm timeinfo;
  time(&now);
  localtime_r(&now, &timeinfo);

  Serial.printf("Current time: %02d:%02d:%02d\n", timeinfo.tm_hour, timeinfo.tm_min, timeinfo.tm_sec);
  Serial.printf("Date: %02d/%02d/%04d\n", timeinfo.tm_mday, timeinfo.tm_mon + 1, timeinfo.tm_year + 1900);
}

void setup() {
  Serial.begin(115200);
  
  // Initialize the LED pin as an output
  pinMode(ledPin, OUTPUT);
  digitalWrite(ledPin, LOW); // Ensure LED is off initially

  // Set the RTC time to a known value (e.g., July 9, 2024, 12:34:56)
  setRtcTime(12, 34, 56, 9, 7, 2024);
}

void loop() {
  // Print the current time every second
  printLocalTime();

  // Get the current time
  time_t now;
  struct tm timeinfo;
  time(&now);
  localtime_r(&now, &timeinfo);

  // Check if the current time is between 19:00:00 and 23:00:00
  if (timeinfo.tm_hour >= 19 && timeinfo.tm_hour < 23) {
    digitalWrite(ledPin, HIGH); // Turn on LED
  } else {
    digitalWrite(ledPin, LOW); // Turn off LED
  }

  delay(1000); // Delay for 1 second
}
